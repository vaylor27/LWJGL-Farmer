import org.gradle.internal.os.OperatingSystem

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenCentral()
}

project.ext.lwjglVersion = "3.3.2"
project.ext.jomlVersion = "1.10.5"
project.ext.lwjgl3AwtVersion = "0.1.8"
project.ext.steamworks4jVersion = "1.9.0"
project.ext.steamworks4jServerVersion = "1.9.0"


ext {
    list = new ArrayList<String>();
}

dependencies {
    implementation 'org.reflections:reflections:0.10.2'
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-bgfx"
    implementation "org.lwjgl:lwjgl-cuda"
    implementation "org.lwjgl:lwjgl-egl"
    implementation "org.lwjgl:lwjgl-fmod"
    implementation "org.lwjgl:lwjgl-freetype"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-harfbuzz"
    implementation "org.lwjgl:lwjgl-hwloc"
    implementation "org.lwjgl:lwjgl-jawt"
    implementation "org.lwjgl:lwjgl-jemalloc"
    implementation "org.lwjgl:lwjgl-ktx"
    implementation "org.lwjgl:lwjgl-libdivide"
    implementation "org.lwjgl:lwjgl-llvm"
    implementation "org.lwjgl:lwjgl-lmdb"
    implementation "org.lwjgl:lwjgl-lz4"
    implementation "org.lwjgl:lwjgl-meow"
    implementation "org.lwjgl:lwjgl-meshoptimizer"
    implementation "org.lwjgl:lwjgl-nanovg"
    implementation "org.lwjgl:lwjgl-nfd"
    implementation "org.lwjgl:lwjgl-nuklear"
    implementation "org.lwjgl:lwjgl-odbc"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opencl"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-opengles"
    implementation "org.lwjgl:lwjgl-opus"
    implementation "org.lwjgl:lwjgl-par"
    implementation "org.lwjgl:lwjgl-remotery"
    implementation "org.lwjgl:lwjgl-rpmalloc"
    implementation "org.lwjgl:lwjgl-shaderc"
    implementation "org.lwjgl:lwjgl-spvc"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-tinyexr"
    implementation "org.lwjgl:lwjgl-tinyfd"
    implementation "org.lwjgl:lwjgl-vma"
    implementation "org.lwjgl:lwjgl-vulkan"
    implementation "org.lwjgl:lwjgl-xxhash"
    implementation "org.lwjgl:lwjgl-yoga"
    implementation "org.lwjgl:lwjgl-zstd"
    implementation "org.slf4j:slf4j-simple:2.0.9"

    natives(OperatingSystem.LINUX, true, true);
    natives(OperatingSystem.LINUX, true, false);
    natives(OperatingSystem.LINUX, false, true);

    natives(OperatingSystem.MAC_OS, true, true);
    natives(OperatingSystem.MAC_OS, false, true);


    natives(OperatingSystem.WINDOWS, true, true);
    natives(OperatingSystem.WINDOWS, false, true);
    natives(OperatingSystem.WINDOWS, false, false);

    for (final def s in list) {
        runtimeOnly("${s}")
    }

    implementation "org.joml:joml:${jomlVersion}"
    implementation "org.lwjglx:lwjgl3-awt:${lwjgl3AwtVersion}"
    implementation "com.code-disaster.steamworks4j:steamworks4j:${steamworks4jVersion}"
    implementation "com.code-disaster.steamworks4j:steamworks4j-server:${steamworks4jServerVersion}"
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation("com.google.guava:guava:24.0-jre")
    implementation 'net.harawata:appdirs:1.2.2'
}


def natives(OperatingSystem os, boolean arch, boolean is64) {
    String natives = "";
    switch (os) {
        case OperatingSystem.LINUX:
            natives = arch
                    ? "natives-linux-${is64 ? "arm64" : "arm32"}"
                    : "natives-linux"
            break
        case OperatingSystem.MAC_OS:
            natives = arch ? "natives-macos-arm64" : "natives-macos"
            break
        case OperatingSystem.WINDOWS:
            natives = is64
                    ? "natives-windows${arch ? "-arm64" : ""}"
                    : "natives-windows-x86"
            break
    }


    list += ("org.lwjgl:lwjgl::" + natives)
    list += ("org.lwjgl:lwjgl-assimp::" + natives)
    if (natives != "natives-windows-arm64") list += ("org.lwjgl:lwjgl-bgfx::" + natives)
    list += ("org.lwjgl:lwjgl-freetype::" + natives)
    list += ("org.lwjgl:lwjgl-glfw::" + natives)
    list += ("org.lwjgl:lwjgl-harfbuzz::" + natives)
    list += ("org.lwjgl:lwjgl-hwloc::" + natives)
    list += ("org.lwjgl:lwjgl-jemalloc::" + natives)
    list += ("org.lwjgl:lwjgl-ktx::" + natives)
    list += ("org.lwjgl:lwjgl-libdivide::" + natives)
    list += ("org.lwjgl:lwjgl-llvm::" + natives)
    list += ("org.lwjgl:lwjgl-lmdb::" + natives)
    list += ("org.lwjgl:lwjgl-lz4::" + natives)
    if (natives != "natives-linux-arm32") list += ("org.lwjgl:lwjgl-meow::" + natives)
    list += ("org.lwjgl:lwjgl-meshoptimizer::" + natives)
    list += ("org.lwjgl:lwjgl-nanovg::" + natives)
    list += ("org.lwjgl:lwjgl-nfd::" + natives)
    list += ("org.lwjgl:lwjgl-nuklear::" + natives)
    list += ("org.lwjgl:lwjgl-openal::" + natives)
    list += ("org.lwjgl:lwjgl-opengl::" + natives)
    list += ("org.lwjgl:lwjgl-opengles::" + natives)
    list += ("org.lwjgl:lwjgl-opus::" + natives)
    list += ("org.lwjgl:lwjgl-par::" + natives)
    if (natives != "natives-windows-arm64") list += ("org.lwjgl:lwjgl-remotery::" + natives)
    list += ("org.lwjgl:lwjgl-rpmalloc::" + natives)
    list += ("org.lwjgl:lwjgl-shaderc::" + natives)
    list += ("org.lwjgl:lwjgl-spvc::" + natives)
    list += ("org.lwjgl:lwjgl-stb::" + natives)
    list += ("org.lwjgl:lwjgl-tinyexr::" + natives)
    list += ("org.lwjgl:lwjgl-tinyfd::" + natives)
    list += ("org.lwjgl:lwjgl-vma::" + natives)
    if (natives == "natives-macos" || natives == "natives-macos-arm64") list += "org.lwjgl:lwjgl-vulkan::" + natives
    list += ("org.lwjgl:lwjgl-xxhash::" + natives)
    list += ("org.lwjgl:lwjgl-yoga::" + natives)
    list += ("org.lwjgl:lwjgl-zstd::" + natives)
}